/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_cycling74_max_MaxObject */

#ifndef _Included_com_cycling74_max_MaxObject
#define _Included_com_cycling74_max_MaxObject
#ifdef __cplusplus
extern "C" {
#endif
/* Inaccessible static: NO_INLETS */
/* Inaccessible static: NO_OUTLETS */
/* Inaccessible static: EMPTY_STRING_ARRAY */
/* Inaccessible static: class_00024com_00024cycling74_00024max_00024MaxObject */
/* Inaccessible static: array_00024Lcom_00024cycling74_00024max_00024Atom */
/* Inaccessible static: class_00024java_00024lang_00024String */
/*
 * Class:     com_cycling74_max_MaxObject
 * Method:    newInlet
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_com_cycling74_max_MaxObject_newInlet
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_cycling74_max_MaxObject
 * Method:    newOutlet
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_com_cycling74_max_MaxObject_newOutlet
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_cycling74_max_MaxObject
 * Method:    doOutletBang
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_cycling74_max_MaxObject_doOutletBang
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_cycling74_max_MaxObject
 * Method:    doOutletFloat
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_com_cycling74_max_MaxObject_doOutletFloat
  (JNIEnv *, jobject, jlong, jfloat);

/*
 * Class:     com_cycling74_max_MaxObject
 * Method:    doOutletSymbol
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_cycling74_max_MaxObject_doOutletSymbol
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     com_cycling74_max_MaxObject
 * Method:    doOutletAnything
 * Signature: (JLjava/lang/String;[Lcom/cycling74/max/Atom;)V
 */
JNIEXPORT void JNICALL Java_com_cycling74_max_MaxObject_doOutletAnything
  (JNIEnv *, jobject, jlong, jstring, jobjectArray);

/*
 * Class:     com_cycling74_max_MaxObject
 * Method:    getPatchPath
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_cycling74_max_MaxObject_getPatchPath
  (JNIEnv *, jobject);

/*
 * Class:     com_cycling74_max_MaxObject
 * Method:    pushPdjPointer
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_cycling74_max_MaxObject_pushPdjPointer
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_cycling74_max_MaxObject
 * Method:    popPdjPointer
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_cycling74_max_MaxObject_popPdjPointer
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_cycling74_max_MaxClock */

#ifndef _Included_com_cycling74_max_MaxClock
#define _Included_com_cycling74_max_MaxClock
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_cycling74_max_MaxClock
 * Method:    getTime
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_com_cycling74_max_MaxClock_getTime
  (JNIEnv *, jclass);

/*
 * Class:     com_cycling74_max_MaxClock
 * Method:    delay
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_com_cycling74_max_MaxClock_delay
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     com_cycling74_max_MaxClock
 * Method:    release
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_cycling74_max_MaxClock_release
  (JNIEnv *, jobject);

/*
 * Class:     com_cycling74_max_MaxClock
 * Method:    unset
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_cycling74_max_MaxClock_unset
  (JNIEnv *, jobject);

/*
 * Class:     com_cycling74_max_MaxClock
 * Method:    create_clock
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_cycling74_max_MaxClock_create_1clock
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_cycling74_max_MaxSystem */

#ifndef _Included_com_cycling74_max_MaxSystem
#define _Included_com_cycling74_max_MaxSystem
#ifdef __cplusplus
extern "C" {
#endif
/* Inaccessible static: low */
/* Inaccessible static: MXJ_VERSION */
#undef com_cycling74_max_MaxSystem_PATH_STYLE_COLON
#define com_cycling74_max_MaxSystem_PATH_STYLE_COLON 2L
#undef com_cycling74_max_MaxSystem_PATH_STYLE_MAX
#define com_cycling74_max_MaxSystem_PATH_STYLE_MAX 0L
#undef com_cycling74_max_MaxSystem_PATH_STYLE_NATIVE
#define com_cycling74_max_MaxSystem_PATH_STYLE_NATIVE 1L
#undef com_cycling74_max_MaxSystem_PATH_STYLE_NATIVE_WIN
#define com_cycling74_max_MaxSystem_PATH_STYLE_NATIVE_WIN 4L
#undef com_cycling74_max_MaxSystem_PATH_STYLE_SLASH
#define com_cycling74_max_MaxSystem_PATH_STYLE_SLASH 3L
#undef com_cycling74_max_MaxSystem_PATH_TYPE_ABSOLUTE
#define com_cycling74_max_MaxSystem_PATH_TYPE_ABSOLUTE 1L
#undef com_cycling74_max_MaxSystem_PATH_TYPE_BOOT
#define com_cycling74_max_MaxSystem_PATH_TYPE_BOOT 3L
#undef com_cycling74_max_MaxSystem_PATH_TYPE_C74
#define com_cycling74_max_MaxSystem_PATH_TYPE_C74 4L
#undef com_cycling74_max_MaxSystem_PATH_TYPE_IGNORE
#define com_cycling74_max_MaxSystem_PATH_TYPE_IGNORE 0L
#undef com_cycling74_max_MaxSystem_PATH_TYPE_RELATIVE
#define com_cycling74_max_MaxSystem_PATH_TYPE_RELATIVE 2L
/*
 * Class:     com_cycling74_max_MaxSystem
 * Method:    post
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_cycling74_max_MaxSystem_post
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_cycling74_max_MaxSystem
 * Method:    error
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_cycling74_max_MaxSystem_error
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_cycling74_max_MaxSystem
 * Method:    ouch
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_cycling74_max_MaxSystem_ouch
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_cycling74_max_MaxSystem
 * Method:    sendMessageToBoundObject
 * Signature: (Ljava/lang/String;Ljava/lang/String;[Lcom/cycling74/max/Atom;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_cycling74_max_MaxSystem_sendMessageToBoundObject
  (JNIEnv *, jclass, jstring, jstring, jobjectArray);

/*
 * Class:     com_cycling74_max_MaxSystem
 * Method:    locateFile
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_cycling74_max_MaxSystem_locateFile
  (JNIEnv *, jclass, jstring);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_cycling74_msp_MSPBuffer */

#ifndef _Included_com_cycling74_msp_MSPBuffer
#define _Included_com_cycling74_msp_MSPBuffer
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_cycling74_msp_MSPBuffer
 * Method:    setSize
 * Signature: (Ljava/lang/String;IJ)V
 */
JNIEXPORT void JNICALL Java_com_cycling74_msp_MSPBuffer_setSize
  (JNIEnv *, jclass, jstring, jint, jlong);

/*
 * Class:     com_cycling74_msp_MSPBuffer
 * Method:    getSize
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_cycling74_msp_MSPBuffer_getSize
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_cycling74_msp_MSPBuffer
 * Method:    getArray
 * Signature: (Ljava/lang/String;JJ)[F
 */
JNIEXPORT jfloatArray JNICALL Java_com_cycling74_msp_MSPBuffer_getArray
  (JNIEnv *, jclass, jstring, jlong, jlong);

/*
 * Class:     com_cycling74_msp_MSPBuffer
 * Method:    setArray
 * Signature: (Ljava/lang/String;J[F)V
 */
JNIEXPORT void JNICALL Java_com_cycling74_msp_MSPBuffer_setArray
  (JNIEnv *, jclass, jstring, jlong, jfloatArray);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class com_cycling74_msp_MSPObject */

#ifndef _Included_com_cycling74_msp_MSPObject
#define _Included_com_cycling74_msp_MSPObject
#ifdef __cplusplus
extern "C" {
#endif
/* Inaccessible static: NO_INLETS */
/* Inaccessible static: NO_OUTLETS */
/* Inaccessible static: EMPTY_STRING_ARRAY */
/* Inaccessible static: class_00024com_00024cycling74_00024max_00024MaxObject */
/* Inaccessible static: array_00024Lcom_00024cycling74_00024max_00024Atom */
/* Inaccessible static: class_00024java_00024lang_00024String */
#undef com_cycling74_msp_MSPObject_SIGNAL
#define com_cycling74_msp_MSPObject_SIGNAL 32L
/* Inaccessible static: MSP_SIGNAL_ARRAY_CLZ */
#ifdef __cplusplus
}
#endif
#endif
